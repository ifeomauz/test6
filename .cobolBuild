<?xml version="1.0" encoding="UTF-8"?>
<project name="national" default="combinedbuild" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
	<taskdef resource="com/microfocus/ant/antlib.xml"/>
	<!--  ***********************************  -->
	<!--  * General property initialisation *  -->
	<!--  ***********************************  -->
	<property name="pathVar.PROJECT_LOC" value="${basedir}"/>
	<property name="pathVar.WORKSPACE_LOC" value="${env.WORKSPACE_LOC}"/>
	<property name="pathVar.ECLIPSE_HOME" value="${env.ECLIPSE_HOME}"/>
	<property name="pathVar.PARENT_LOC" value="${env.PARENT_LOC}"/>
	<property environment="env"/>
	<property name="national" value="${basedir}"/>
	<property name="cfg" value="Wma_New_Configuration"/>
	<property name="cfgtarget" value="cfg.${cfg}"/>
	<property name="forceCompile" value="true"/>
	<property name="buildThreadCount" value="1"/>
	<property name="useDirectiveSet" value="false"/>
	<property name="connectionName" value=""/>
	<property name="projectName" value=""/>
	<property name="failOnError" value="false"/>
	<property name="cobolFailOnError" value="${failOnError}"/>
	<property name="cobollinkFailOnError" value="${failOnError}"/>
	<property name="TESTCOVER_VALUE_ON" value="TESTCOVER"/>
	<property name="TESTCOVER_VALUE_OFF" value="NOTESTCOVER"/>
	<target name="printLocations">
		<echo message="Project Location: &apos;pathVar.PROJECT_LOC&apos;=${pathVar.PROJECT_LOC}"/>
		<echo message="Project Location: &apos;pathVar.WORKSPACE_LOC&apos;=${pathVar.WORKSPACE_LOC}"/>
		<echo message="Project Location: &apos;pathVar.ECLIPSE_HOME&apos;=${pathVar.ECLIPSE_HOME}"/>
		<echo message="Project Location: &apos;pathVar.PARENT_LOC&apos;=${pathVar.PARENT_LOC}"/>
		<echo message="Project Location: &apos;project.national&apos;=${national}"/>
	</target>
	<!--  ******************************  -->
	<!--  * OS-specific initialisation *  -->
	<!--  ******************************  -->
	<condition property="windows">
		<os family="windows"/>
	</condition>
	<condition property="unix">
		<os family="unix"/>
	</condition>
	<ac:if>
		<isset property="windows"/>
		<then>
			<property name="dllext" value=".dll"/>
			<property name="exeext" value=".exe"/>
			<property name="objext" value=".obj"/>
			<property name="equalsInDir" value="="/>
			<property name="pathVar.pS" value=";"/>
			<property name="shell" value="cmd"/>
			<property name="shell.ext" value=".bat"/>
			<property name="shell.arg" value="/c"/>
			<property name="script.header" value="@rem MS-DOS Batch File"/>
		</then>
	</ac:if>
	<ac:if>
		<isset property="unix"/>
		<then>
			<property name="dllext" value=".so"/>
			<property name="exeext" value=""/>
			<property name="objext" value=".o"/>
			<property name="equalsInDir" value="="/>
			<property name="pathVar.pS" value=":"/>
			<property name="shell" value="sh"/>
			<property name="shell.ext" value=".sh"/>
			<property name="shell.arg" value="-c"/>
			<property name="script.header" value="#!/bin/sh"/>
		</then>
	</ac:if>
	<!-- Assembler Macro locations -->
	<mffilelist id="assembler.macro.locations">
		<path type="asmmacro" name="${national}"/>
	</mffilelist>
	<!-- IMS Copy locations -->
	<mffilelist id="ims.copy.locations">
		<path type="imscpy" name="${national}"/>
	</mffilelist>
	<!-- JCL include locations -->
	<mffilelist id="jcl.include.locations">
		<path type="jclinclude" name="${national}"/>
	</mffilelist>
	<!-- Copypath enabled output locations -->
	<mffilelist id="output.copybook.enabled.locations">
		<path type="copybook" name="${national}"/>
	</mffilelist>
	<!--  *****************************  -->
	<!--  * COBOL compiler directives *  -->
	<!--  *****************************  -->
	<!-- cobol_directive_set_1 -->
	<mfdirlist id="cobol_directive_set_1">
		<directive name="DIALECT" id="dialect" value="ENTCOBOL"/>
		<directive name="COPYEXT" id="copyext" value="cpy,cbl"/>
		<directive name="NOPANVALET NOLIBRARIAN" id="mainframecopyhandling"/>
		<directive name="WARNING" id="warning" value="1"/>
		<directive name="NOCOBOLDIR" id="nocoboldir"/>
		<directive name="MAX-ERROR" id="max-error" value="100"/>
		<directive name="SOURCEFORMAT" id="sourceformat" value="fixed"/>
		<directive name="CHARSET" id="charset" value="EBCDIC"/>
		<directive name="SOURCETABSTOP" id="sourcetabstop" value="4"/>
		<directive name="COLLECTION" id="collection" value="national"/>
		<directive name="${TESTCOVER_VALUE_1}"/>
	</mfdirlist>
	<property name="TESTCOVER_VALUE_1" value="${TESTCOVER_VALUE_OFF}"/>
	<!--  **********************  -->
	<!--  * COBOL source files *  -->
	<!--  **********************  -->
	<!-- cobol_file_set_1 -->
	<mffilelist type="srcfile" id="cobol_file_set_1" srcdir="${basedir}">
		<file name="Program1.cbl"/>
	</mffilelist>
	<!-- COBOL copybook locations -->
	<mffilelist id="cobol.copybook.locations">
		<path type="copybook" name="${national}"/>
	</mffilelist>
	<!--  ********************************  -->
	<!--  * Source File Compile and Link *  -->
	<!--  ********************************  -->
	<!-- Configuration:New_Configuration -->
	<target name="FileCompile.New_Configuration.Program1.cbl">
		<cobol debug="true" analysisData="${analysisData}" threadCount="${buildThreadCount}" threadedRts="true" analysisDataDir="${analysisDataDir}" useDirectiveSet="${useDirectiveSet}" srcfile="Program1.cbl" destdir="${basedir}/New_Configuration.bin" is64bit="false" failonerror="${cobolFailOnError}" srcdir="${basedir}" forceCompile="${forceCompile}" connectionName="${connectionName}" projectName="${projectName}" desttype="obj">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
		</cobol>
		<cobollink debug="true" destfile="Program1" objectfile="Program1${objext}" entrypoint="" sharedRts="true" destdir="${basedir}/New_Configuration.bin" is64bit="false" objectdir="${basedir}/New_Configuration.bin" failonerror="${cobollinkFailOnError}" desttype="dll/cso" threadedRts="true">
		</cobollink>
	</target>
	<!-- Configuration:Wma_New_Configuration -->
	<target name="FileCompile.Wma_New_Configuration.Program1.cbl">
		<cobol debug="true" analysisData="${analysisData}" threadCount="${buildThreadCount}" threadedRts="true" analysisDataDir="${analysisDataDir}" useDirectiveSet="${useDirectiveSet}" srcfile="Program1.cbl" destdir="${basedir}/New_Configuration_01.bin" is64bit="false" failonerror="${cobolFailOnError}" srcdir="${basedir}" forceCompile="${forceCompile}" connectionName="${connectionName}" projectName="${projectName}" desttype="obj">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
		</cobol>
		<cobollink debug="true" destfile="Program1" objectfile="Program1${objext}" entrypoint="" sharedRts="true" destdir="${basedir}/New_Configuration_01.bin" is64bit="false" objectdir="${basedir}/New_Configuration_01.bin" failonerror="${cobollinkFailOnError}" desttype="dll/cso" threadedRts="true">
		</cobollink>
	</target>
	<!--  ****************  -->
	<!--  * Object files *  -->
	<!--  ****************  -->
	<!-- Default -->
	<mffilelist id="cobol.default.object.files" srcdir="${basedir}/New_Configuration_01.bin" type="objfile">
		<file name="Program1${objext}"/>
	</mffilelist>
	<!-- cfg.New_Configuration -->
	<target name="combinedbuild.cfg.New_Configuration" depends="printLocations,pre.build.cfg.New_Configuration,bms.cfg.New_Configuration,asm.cfg.New_Configuration,ims.cfg.New_Configuration,nature.specific.build.cfg.New_Configuration,post.build.cfg.New_Configuration">
	</target>
	<target name="imscobbuild.cfg.New_Configuration" depends="printLocations,pre.build.cfg.New_Configuration,ims.cfg.New_Configuration,nature.specific.build.cfg.New_Configuration,post.build.cfg.New_Configuration">
	</target>
	<target name="bmsbuild.cfg.New_Configuration" depends="printLocations,bms.cfg.New_Configuration">
	</target>
	<target name="asm.cfg.New_Configuration">
		<echo message="No Assembler programs to compile"/>
		<echo message="No Assembler Linker files to compile"/>
	</target>
	<target name="bms.cfg.New_Configuration">
		<echo message="No BMS files to compile"/>
	</target>
	<target name="ims.cfg.New_Configuration">
		<echo message="No DBD files to compile"/>
		<echo message="No MFS files to compile"/>
		<echo message="No PSB files to compile"/>
	</target>
	<!-- cfg.Wma_New_Configuration -->
	<target name="combinedbuild.cfg.Wma_New_Configuration" depends="printLocations,pre.build.cfg.Wma_New_Configuration,bms.cfg.Wma_New_Configuration,asm.cfg.Wma_New_Configuration,ims.cfg.Wma_New_Configuration,nature.specific.build.cfg.Wma_New_Configuration,post.build.cfg.Wma_New_Configuration">
	</target>
	<target name="imscobbuild.cfg.Wma_New_Configuration" depends="printLocations,pre.build.cfg.Wma_New_Configuration,ims.cfg.Wma_New_Configuration,nature.specific.build.cfg.Wma_New_Configuration,post.build.cfg.Wma_New_Configuration">
	</target>
	<target name="bmsbuild.cfg.Wma_New_Configuration" depends="printLocations,bms.cfg.Wma_New_Configuration">
	</target>
	<target name="asm.cfg.Wma_New_Configuration">
		<echo message="No Assembler programs to compile"/>
		<echo message="No Assembler Linker files to compile"/>
	</target>
	<target name="bms.cfg.Wma_New_Configuration">
		<echo message="No BMS files to compile"/>
	</target>
	<target name="ims.cfg.Wma_New_Configuration">
		<echo message="No DBD files to compile"/>
		<echo message="No MFS files to compile"/>
		<echo message="No PSB files to compile"/>
	</target>
	<!--  *************************  -->
	<!--  * Configuration targets *  -->
	<!--  *************************  -->
	<!-- cfg.New_Configuration -->
	<target name="cobolbuild.cfg.New_Configuration" depends="printLocations,pre.build.cfg.New_Configuration,nature.specific.build.cfg.New_Configuration,post.build.cfg.New_Configuration"/>
	<target name="nature.specific.build.cfg.New_Configuration" depends="cobol.cfg.New_Configuration"/>
	<target name="cobol.cfg.New_Configuration" depends="cobol.compile.cfg.New_Configuration,cobol.link.cfg.New_Configuration"/>
	<target name="New_Configuration.FileCompile">
		<ac:for list="${filesList}" param="filename" keepgoing="true" trim="true">
			<sequential>
				<ac:if>
					<not>
						<isset property="isCancelled"/>
					</not>
					<then>
						<ac:antcallback target="FileCompile.New_Configuration.@{filename}" inheritAll="true" return="isCancelled">
						</ac:antcallback>
					</then>
				</ac:if>
			</sequential>
		</ac:for>
	</target>
	<target name="cobol.compile.cfg.New_Configuration">
		<cobol debug="true" analysisData="${analysisData}" threadCount="${buildThreadCount}" threadedRts="true" analysisDataDir="${analysisDataDir}" useDirectiveSet="${useDirectiveSet}" destdir="${basedir}/New_Configuration.bin" is64bit="false" failonerror="${cobolFailOnError}" forceCompile="${forceCompile}" connectionName="${connectionName}" projectName="${projectName}" desttype="obj">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
			<mffilelist refid="cobol_file_set_1"/>
		</cobol>
	</target>
	<target name="cobol.link.cfg.New_Configuration">
		<cobollink debug="true" destfile="Program1" objectfile="Program1${objext}" entrypoint="" sharedRts="true" destdir="${basedir}/New_Configuration.bin" is64bit="false" objectdir="${basedir}/New_Configuration.bin" failonerror="${cobollinkFailOnError}" desttype="dll/cso" threadedRts="true">
		</cobollink>
	</target>
	<target name="pre.build.cfg.New_Configuration">
	</target>
	<target name="post.build.cfg.New_Configuration">
	</target>
	<!-- cfg.Wma_New_Configuration -->
	<target name="cobolbuild.cfg.Wma_New_Configuration" depends="printLocations,pre.build.cfg.Wma_New_Configuration,nature.specific.build.cfg.Wma_New_Configuration,post.build.cfg.Wma_New_Configuration"/>
	<target name="nature.specific.build.cfg.Wma_New_Configuration" depends="cobol.cfg.Wma_New_Configuration"/>
	<target name="cobol.cfg.Wma_New_Configuration" depends="cobol.compile.cfg.Wma_New_Configuration,cobol.link.cfg.Wma_New_Configuration"/>
	<target name="Wma_New_Configuration.FileCompile">
		<ac:for list="${filesList}" param="filename" keepgoing="true" trim="true">
			<sequential>
				<ac:if>
					<not>
						<isset property="isCancelled"/>
					</not>
					<then>
						<ac:antcallback target="FileCompile.Wma_New_Configuration.@{filename}" inheritAll="true" return="isCancelled">
						</ac:antcallback>
					</then>
				</ac:if>
			</sequential>
		</ac:for>
	</target>
	<target name="cobol.compile.cfg.Wma_New_Configuration">
		<cobol debug="true" analysisData="${analysisData}" threadCount="${buildThreadCount}" threadedRts="true" analysisDataDir="${analysisDataDir}" useDirectiveSet="${useDirectiveSet}" destdir="${basedir}/New_Configuration_01.bin" is64bit="false" failonerror="${cobolFailOnError}" forceCompile="${forceCompile}" connectionName="${connectionName}" projectName="${projectName}" desttype="obj">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
			<mffilelist refid="cobol_file_set_1"/>
		</cobol>
	</target>
	<target name="cobol.link.cfg.Wma_New_Configuration">
		<cobollink debug="true" destfile="Program1" objectfile="Program1${objext}" entrypoint="" sharedRts="true" destdir="${basedir}/New_Configuration_01.bin" is64bit="false" objectdir="${basedir}/New_Configuration_01.bin" failonerror="${cobollinkFailOnError}" desttype="dll/cso" threadedRts="true">
		</cobollink>
	</target>
	<target name="pre.build.cfg.Wma_New_Configuration">
	</target>
	<target name="post.build.cfg.Wma_New_Configuration">
	</target>
	<target name="clean.cfg.New_Configuration">
		<cobolclean debug="true" destdir="${basedir}/New_Configuration.bin" desttype="dll">
			<mffilelist refid="cobol_file_set_1"/>
		</cobolclean>
	</target>
	<target name="clean.cfg.Wma_New_Configuration">
		<cobolclean debug="true" destdir="${basedir}/New_Configuration_01.bin" desttype="dll">
			<mffilelist refid="cobol_file_set_1"/>
		</cobolclean>
	</target>
	<!--  *******************  -->
	<!--  * General targets *  -->
	<!--  *******************  -->
	<target name="clean">
		<antcall target="clean.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="compileSource">
		<antcall target="${cfg}.FileCompile" inheritAll="true"/>
	</target>
	<target name="compile" depends="compileSource">
	</target>
	<target name="combinedbuild">
		<antcall target="combinedbuild.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="imscobbuild">
		<antcall target="imscobbuild.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="bmsbuild">
		<antcall target="bmsbuild.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="cobolbuild">
		<antcall target="cobolbuild.${cfgtarget}" inheritAll="true"/>
	</target>
</project>
